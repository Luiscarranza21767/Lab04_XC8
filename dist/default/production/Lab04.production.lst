

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Oct 11 09:08:50 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215     015B                     __pidataBANK0:
   216                           
   217                           ;initializer for _display
   218     015B  343F               	retlw	63
   219     015C  3406               	retlw	6
   220     015D  345B               	retlw	91
   221     015E  344F               	retlw	79
   222     015F  3466               	retlw	102
   223     0160  346D               	retlw	109
   224     0161  347D               	retlw	125
   225     0162  3407               	retlw	7
   226     0163  347F               	retlw	127
   227     0164  346F               	retlw	111
   228     0165  3477               	retlw	119
   229     0166  347C               	retlw	124
   230     0167  3439               	retlw	57
   231     0168  345E               	retlw	94
   232     0169  3479               	retlw	121
   233     016A  3471               	retlw	113
   234     0005                     _PORTAbits	set	5
   235     0006                     _PORTB	set	6
   236     001E                     _ADRESH	set	30
   237     001F                     _ADCON0bits	set	31
   238     0008                     _PORTD	set	8
   239     000B                     _INTCONbits	set	11
   240     0007                     _PORTC	set	7
   241     0006                     _PORTBbits	set	6
   242     0066                     _ADIF	set	102
   243     0058                     _RBIF	set	88
   244     009F                     _ADCON1bits	set	159
   245     0085                     _TRISAbits	set	133
   246     0081                     _OPTION_REGbits	set	129
   247     0095                     _WPUB	set	149
   248     0096                     _IOCB	set	150
   249     0088                     _TRISD	set	136
   250     0087                     _TRISC	set	135
   251     0086                     _TRISB	set	134
   252     0188                     _ANSELbits	set	392
   253     0189                     _ANSELH	set	393
   254                           
   255                           	psect	cinit
   256     000F                     start_initialization:	
   257                           ; #config settings
   258                           
   259     000F                     __initialization:
   260                           
   261                           ; Initialize objects allocated to BANK0
   262     000F  1383               	bcf	3,7	;select IRP bank0
   263     0010  3030               	movlw	low (__pdataBANK0+16)
   264     0011  00FD               	movwf	btemp+-1
   265     0012  3001               	movlw	high __pidataBANK0
   266     0013  00FE               	movwf	btemp
   267     0014  305B               	movlw	low __pidataBANK0
   268     0015  00FF               	movwf	btemp+1
   269     0016  3020               	movlw	low __pdataBANK0
   270     0017  0084               	movwf	4
   271     0018  120A  118A  214C  120A  118A  	fcall	init_ram0
   272                           
   273                           ; Clear objects allocated to COMMON
   274     001D  01F5               	clrf	__pbssCOMMON& (0+127)
   275     001E  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   276     001F  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   277     0020  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   278     0021                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281     0021                     __end_of__initialization:
   282     0021  0183               	clrf	3
   283     0022  120A  118A  288E   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286     0075                     __pbssCOMMON:
   287     0075                     _DISP2:
   288     0075                     	ds	2
   289     0077                     _DISP1:
   290     0077                     	ds	2
   291                           
   292                           	psect	dataBANK0
   293     0020                     __pdataBANK0:
   294     0020                     _display:
   295     0020                     	ds	16
   296                           
   297                           	psect	inittext
   298     0148                     init_fetch0:	
   299                           ;	Called with low address in FSR and high address in W
   300                           
   301     0148  087E               	movf	btemp,w
   302     0149  008A               	movwf	10
   303     014A  087F               	movf	btemp+1,w
   304     014B  0082               	movwf	2
   305     014C                     init_ram0:	
   306                           ;Called with:
   307                           ;	high address of idata address in btemp 
   308                           ;	low address of idata address in btemp+1 
   309                           ;	low address of data in FSR
   310                           ;	high address + 1 of data in btemp-1
   311                           
   312     014C  120A  118A  2148  120A  118A  	fcall	init_fetch0
   313     0151  0080               	movwf	0
   314     0152  0A84               	incf	4,f
   315     0153  0804               	movf	4,w
   316     0154  067D               	xorwf	btemp+-1,w
   317     0155  1903               	btfsc	3,2
   318     0156  3400               	retlw	0
   319     0157  0AFF               	incf	btemp+1,f
   320     0158  1903               	btfsc	3,2
   321     0159  0AFE               	incf	btemp,f
   322     015A  294C               	goto	init_ram0
   323                           
   324                           	psect	cstackCOMMON
   325     0070                     __pcstackCOMMON:
   326     0070                     ?_setup:
   327     0070                     ?_setup_portb:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_setup_ADC:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_isr:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_main:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 1 bytes @ 0x0
   344     0070                     	ds	4
   345     0074                     ??_setup:
   346     0074                     ??_setup_portb:	
   347                           ; 1 bytes @ 0x4
   348                           
   349     0074                     ??_setup_ADC:	
   350                           ; 1 bytes @ 0x4
   351                           
   352     0074                     ??___awdiv:	
   353                           ; 1 bytes @ 0x4
   354                           
   355                           
   356                           ; 1 bytes @ 0x4
   357     0074                     	ds	1
   358                           
   359                           	psect	cstackBANK0
   360     0030                     __pcstackBANK0:
   361     0030                     ?___awdiv:
   362     0030                     ___awdiv@divisor:	
   363                           ; 2 bytes @ 0x0
   364                           
   365                           
   366                           ; 2 bytes @ 0x0
   367     0030                     	ds	2
   368     0032                     ___awdiv@dividend:
   369                           
   370                           ; 2 bytes @ 0x2
   371     0032                     	ds	2
   372     0034                     ___awdiv@counter:
   373                           
   374                           ; 1 bytes @ 0x4
   375     0034                     	ds	1
   376     0035                     ___awdiv@sign:
   377                           
   378                           ; 1 bytes @ 0x5
   379     0035                     	ds	1
   380     0036                     ___awdiv@quotient:
   381                           
   382                           ; 2 bytes @ 0x6
   383     0036                     	ds	2
   384     0038                     ??_main:
   385                           
   386                           ; 1 bytes @ 0x8
   387     0038                     	ds	2
   388                           
   389                           	psect	maintext
   390     008E                     __pmaintext:	
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 83 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : B00/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0
   412 ;;      Temps:          0       2       0       0       0
   413 ;;      Totals:         0       2       0       0       0
   414 ;;Total ram usage:        2 bytes
   415 ;; Hardware stack levels required when called: 2
   416 ;; This function calls:
   417 ;;		___awdiv
   418 ;;		_setup
   419 ;;		_setup_ADC
   420 ;;		_setup_portb
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426     008E                     _main:	
   427                           ;psect for function _main
   428                           
   429     008E                     l906:	
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   432                           
   433                           
   434                           ;main.c: 84:     setup();
   435     008E  120A  118A  216B  120A  118A  	fcall	_setup
   436                           
   437                           ;main.c: 85:     setup_portb();
   438     0093  120A  118A  217B  120A  118A  	fcall	_setup_portb
   439                           
   440                           ;main.c: 86:     setup_ADC();
   441     0098  120A  118A  212A  120A  118A  	fcall	_setup_ADC
   442     009D                     l908:
   443                           
   444                           ;main.c: 87:     PORTD = display[0];
   445     009D  1283               	bcf	3,5	;RP0=0, select bank0
   446     009E  1303               	bcf	3,6	;RP1=0, select bank0
   447     009F  0820               	movf	_display,w
   448     00A0  0088               	movwf	8	;volatile
   449     00A1                     l910:
   450                           
   451                           ;main.c: 89:         ADCON0bits.GO = 1;
   452     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   453     00A2  1303               	bcf	3,6	;RP1=0, select bank0
   454     00A3  149F               	bsf	31,1	;volatile
   455     00A4                     l71:	
   456                           ;main.c: 90:         while (ADCON0bits.GO == 1);
   457                           
   458     00A4  189F               	btfsc	31,1	;volatile
   459     00A5  28A7               	goto	u421
   460     00A6  28A8               	goto	u420
   461     00A7                     u421:
   462     00A7  28A4               	goto	l71
   463     00A8                     u420:
   464     00A8                     l73:
   465                           
   466                           ;main.c: 91:         ADIF = 0;
   467     00A8  130C               	bcf	12,6	;volatile
   468     00A9                     l912:
   469                           
   470                           ;main.c: 92:         DISP1 = (ADRESH%16);
   471     00A9  081E               	movf	30,w	;volatile
   472     00AA  390F               	andlw	15
   473     00AB  00B8               	movwf	??_main
   474     00AC  01B9               	clrf	??_main+1
   475     00AD  0838               	movf	??_main,w
   476     00AE  00F7               	movwf	_DISP1
   477     00AF  0839               	movf	??_main+1,w
   478     00B0  00F8               	movwf	_DISP1+1
   479     00B1                     l914:
   480                           
   481                           ;main.c: 93:         DISP2 = (ADRESH/16);
   482     00B1  3010               	movlw	16
   483     00B2  00B0               	movwf	___awdiv@divisor
   484     00B3  3000               	movlw	0
   485     00B4  00B1               	movwf	___awdiv@divisor+1
   486     00B5  081E               	movf	30,w	;volatile
   487     00B6  00B8               	movwf	??_main
   488     00B7  01B9               	clrf	??_main+1
   489     00B8  0838               	movf	??_main,w
   490     00B9  00B2               	movwf	___awdiv@dividend
   491     00BA  0839               	movf	??_main+1,w
   492     00BB  00B3               	movwf	___awdiv@dividend+1
   493     00BC  120A  118A  2025  120A  118A  	fcall	___awdiv
   494     00C1  1283               	bcf	3,5	;RP0=0, select bank0
   495     00C2  1303               	bcf	3,6	;RP1=0, select bank0
   496     00C3  0831               	movf	?___awdiv+1,w
   497     00C4  00F6               	movwf	_DISP2+1
   498     00C5  0830               	movf	?___awdiv,w
   499     00C6  00F5               	movwf	_DISP2
   500     00C7                     l916:
   501                           
   502                           ;main.c: 94:         if (PORTBbits.RB0 == 1){
   503     00C7  1C06               	btfss	6,0	;volatile
   504     00C8  28CA               	goto	u431
   505     00C9  28CB               	goto	u430
   506     00CA                     u431:
   507     00CA  28D4               	goto	l74
   508     00CB                     u430:
   509     00CB                     l918:
   510                           
   511                           ;main.c: 95:             PORTD = display[DISP1];
   512     00CB  0877               	movf	_DISP1,w
   513     00CC  3E20               	addlw	(low (_display| 0))& (0+255)
   514     00CD  0084               	movwf	4
   515     00CE  1383               	bcf	3,7	;select IRP bank0
   516     00CF  0800               	movf	0,w
   517     00D0  0088               	movwf	8	;volatile
   518     00D1                     l920:
   519                           
   520                           ;main.c: 96:             PORTBbits.RB0 = 0;
   521     00D1  1006               	bcf	6,0	;volatile
   522     00D2                     l922:
   523                           
   524                           ;main.c: 97:             PORTBbits.RB1 = 1;
   525     00D2  1486               	bsf	6,1	;volatile
   526                           
   527                           ;main.c: 98:             }
   528     00D3  28E0               	goto	l930
   529     00D4                     l74:	
   530                           ;main.c: 99:         else if(PORTBbits.RB1 == 1){
   531                           
   532     00D4  1C86               	btfss	6,1	;volatile
   533     00D5  28D7               	goto	u441
   534     00D6  28D8               	goto	u440
   535     00D7                     u441:
   536     00D7  28E0               	goto	l930
   537     00D8                     u440:
   538     00D8                     l924:
   539                           
   540                           ;main.c: 100:             PORTD = display[DISP2];
   541     00D8  0875               	movf	_DISP2,w
   542     00D9  3E20               	addlw	(low (_display| 0))& (0+255)
   543     00DA  0084               	movwf	4
   544     00DB  1383               	bcf	3,7	;select IRP bank0
   545     00DC  0800               	movf	0,w
   546     00DD  0088               	movwf	8	;volatile
   547     00DE                     l926:
   548                           
   549                           ;main.c: 101:             PORTBbits.RB0 = 1;
   550     00DE  1406               	bsf	6,0	;volatile
   551     00DF                     l928:
   552                           
   553                           ;main.c: 102:             PORTBbits.RB1 = 0;
   554     00DF  1086               	bcf	6,1	;volatile
   555     00E0                     l930:
   556                           
   557                           ;main.c: 104:         _delay((unsigned long)((5)*(4000000/4000.0)));
   558     00E0  3007               	movlw	7
   559     00E1  1283               	bcf	3,5	;RP0=0, select bank0
   560     00E2  1303               	bcf	3,6	;RP1=0, select bank0
   561     00E3  00B9               	movwf	??_main+1
   562     00E4  307C               	movlw	124
   563     00E5  00B8               	movwf	??_main
   564     00E6                     u457:
   565     00E6  0BB8               	decfsz	??_main,f
   566     00E7  28E6               	goto	u457
   567     00E8  0BB9               	decfsz	??_main+1,f
   568     00E9  28E6               	goto	u457
   569     00EA  0000               	nop
   570     00EB  28A1               	goto	l910
   571     00EC  120A  118A  280C   	ljmp	start
   572     00EF                     __end_of_main:
   573                           
   574                           	psect	text1
   575     017B                     __ptext1:	
   576 ;; *************** function _setup_portb *****************
   577 ;; Defined at:
   578 ;;		line 116 in file "main.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606     017B                     _setup_portb:	
   607                           ;psect for function _setup_portb
   608                           
   609     017B                     l692:	
   610                           ;incstack = 0
   611                           ; Regs used in _setup_portb: [wreg]
   612                           
   613                           
   614                           ;main.c: 117:     INTCONbits.GIE = 1;
   615     017B  178B               	bsf	11,7	;volatile
   616                           
   617                           ;main.c: 118:     INTCONbits.RBIE = 1;
   618     017C  158B               	bsf	11,3	;volatile
   619                           
   620                           ;main.c: 119:     INTCONbits.RBIF = 0;
   621     017D  100B               	bcf	11,0	;volatile
   622     017E                     l694:
   623                           
   624                           ;main.c: 120:     IOCB = 0b11100000;
   625     017E  30E0               	movlw	224
   626     017F  1683               	bsf	3,5	;RP0=1, select bank1
   627     0180  1303               	bcf	3,6	;RP1=0, select bank1
   628     0181  0096               	movwf	22	;volatile
   629                           
   630                           ;main.c: 121:     WPUB = 0b11100000;
   631     0182  30E0               	movlw	224
   632     0183  0095               	movwf	21	;volatile
   633     0184                     l696:
   634                           
   635                           ;main.c: 122:     OPTION_REGbits.nRBPU = 0;
   636     0184  1381               	bcf	1,7	;volatile
   637     0185                     l85:
   638     0185  0008               	return
   639     0186                     __end_of_setup_portb:
   640                           
   641                           	psect	text2
   642     012A                     __ptext2:	
   643 ;; *************** function _setup_ADC *****************
   644 ;; Defined at:
   645 ;;		line 125 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          1       0       0       0       0
   662 ;;      Totals:         1       0       0       0       0
   663 ;;Total ram usage:        1 bytes
   664 ;; Hardware stack levels used: 1
   665 ;; Hardware stack levels required when called: 1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673     012A                     _setup_ADC:	
   674                           ;psect for function _setup_ADC
   675                           
   676     012A                     l698:	
   677                           ;incstack = 0
   678                           ; Regs used in _setup_ADC: [wreg]
   679                           
   680                           
   681                           ;main.c: 126:     PORTAbits.RA0 = 0;
   682     012A  1283               	bcf	3,5	;RP0=0, select bank0
   683     012B  1303               	bcf	3,6	;RP1=0, select bank0
   684     012C  1005               	bcf	5,0	;volatile
   685                           
   686                           ;main.c: 127:     TRISAbits.TRISA0 = 1;
   687     012D  1683               	bsf	3,5	;RP0=1, select bank1
   688     012E  1303               	bcf	3,6	;RP1=0, select bank1
   689     012F  1405               	bsf	5,0	;volatile
   690                           
   691                           ;main.c: 128:     ANSELbits.ANS0 = 1;
   692     0130  1683               	bsf	3,5	;RP0=1, select bank3
   693     0131  1703               	bsf	3,6	;RP1=1, select bank3
   694     0132  1408               	bsf	8,0	;volatile
   695                           
   696                           ;main.c: 130:     ADCON0bits.ADCS1 = 0;
   697     0133  1283               	bcf	3,5	;RP0=0, select bank0
   698     0134  1303               	bcf	3,6	;RP1=0, select bank0
   699     0135  139F               	bcf	31,7	;volatile
   700                           
   701                           ;main.c: 131:     ADCON0bits.ADCS0 = 1;
   702     0136  171F               	bsf	31,6	;volatile
   703                           
   704                           ;main.c: 133:     ADCON1bits.VCFG1 = 0;
   705     0137  1683               	bsf	3,5	;RP0=1, select bank1
   706     0138  1303               	bcf	3,6	;RP1=0, select bank1
   707     0139  129F               	bcf	31,5	;volatile
   708                           
   709                           ;main.c: 134:     ADCON1bits.VCFG0 = 0;
   710     013A  121F               	bcf	31,4	;volatile
   711                           
   712                           ;main.c: 136:     ADCON1bits.ADFM = 0;
   713     013B  139F               	bcf	31,7	;volatile
   714                           
   715                           ;main.c: 138:     ADCON0bits.CHS3 = 0;
   716     013C  1283               	bcf	3,5	;RP0=0, select bank0
   717     013D  1303               	bcf	3,6	;RP1=0, select bank0
   718     013E  129F               	bcf	31,5	;volatile
   719                           
   720                           ;main.c: 139:     ADCON0bits.CHS2 = 0;
   721     013F  121F               	bcf	31,4	;volatile
   722                           
   723                           ;main.c: 140:     ADCON0bits.CHS1 = 0;
   724     0140  119F               	bcf	31,3	;volatile
   725                           
   726                           ;main.c: 141:     ADCON0bits.CHS0 = 0;
   727     0141  111F               	bcf	31,2	;volatile
   728                           
   729                           ;main.c: 143:     ADCON0bits.ADON = 1;
   730     0142  141F               	bsf	31,0	;volatile
   731     0143                     l700:
   732                           
   733                           ;main.c: 144:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   734     0143  3021               	movlw	33
   735     0144  00F4               	movwf	??_setup_ADC
   736     0145                     u467:
   737     0145  0BF4               	decfsz	??_setup_ADC,f
   738     0146  2945               	goto	u467
   739     0147                     l88:
   740     0147  0008               	return
   741     0148                     __end_of_setup_ADC:
   742                           
   743                           	psect	text3
   744     016B                     __ptext3:	
   745 ;; *************** function _setup *****************
   746 ;; Defined at:
   747 ;;		line 107 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; Hardware stack levels required when called: 1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775     016B                     _setup:	
   776                           ;psect for function _setup
   777                           
   778     016B                     l680:	
   779                           ;incstack = 0
   780                           ; Regs used in _setup: [wreg+status,2]
   781                           
   782                           
   783                           ;main.c: 108:     ANSELH = 0;
   784     016B  1683               	bsf	3,5	;RP0=1, select bank3
   785     016C  1703               	bsf	3,6	;RP1=1, select bank3
   786     016D  0189               	clrf	9	;volatile
   787     016E                     l682:
   788                           
   789                           ;main.c: 109:     TRISB = 0b11100000;
   790     016E  30E0               	movlw	224
   791     016F  1683               	bsf	3,5	;RP0=1, select bank1
   792     0170  1303               	bcf	3,6	;RP1=0, select bank1
   793     0171  0086               	movwf	6	;volatile
   794     0172                     l684:
   795                           
   796                           ;main.c: 110:     TRISC = 0;
   797     0172  0187               	clrf	7	;volatile
   798     0173                     l686:
   799                           
   800                           ;main.c: 111:     TRISD = 0;
   801     0173  0188               	clrf	8	;volatile
   802     0174                     l688:
   803                           
   804                           ;main.c: 112:     PORTC = 0;
   805     0174  1283               	bcf	3,5	;RP0=0, select bank0
   806     0175  1303               	bcf	3,6	;RP1=0, select bank0
   807     0176  0187               	clrf	7	;volatile
   808                           
   809                           ;main.c: 113:     PORTB = 1;
   810     0177  3001               	movlw	1
   811     0178  0086               	movwf	6	;volatile
   812     0179                     l690:
   813                           
   814                           ;main.c: 114:     PORTD = 0;
   815     0179  0188               	clrf	8	;volatile
   816     017A                     l82:
   817     017A  0008               	return
   818     017B                     __end_of_setup:
   819                           
   820                           	psect	text4
   821     0025                     __ptext4:	
   822 ;; *************** function ___awdiv *****************
   823 ;; Defined at:
   824 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  divisor         2    0[BANK0 ] int 
   827 ;;  dividend        2    2[BANK0 ] int 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  quotient        2    6[BANK0 ] int 
   830 ;;  sign            1    5[BANK0 ] unsigned char 
   831 ;;  counter         1    4[BANK0 ] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  2    0[BANK0 ] int 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       4       0       0       0
   842 ;;      Locals:         0       4       0       0       0
   843 ;;      Temps:          1       0       0       0       0
   844 ;;      Totals:         1       8       0       0       0
   845 ;;Total ram usage:        9 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855     0025                     ___awdiv:	
   856                           ;psect for function ___awdiv
   857                           
   858     0025                     l862:	
   859                           ;incstack = 0
   860                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   861                           
   862     0025  1283               	bcf	3,5	;RP0=0, select bank0
   863     0026  1303               	bcf	3,6	;RP1=0, select bank0
   864     0027  01B5               	clrf	___awdiv@sign
   865     0028                     l864:
   866     0028  1FB1               	btfss	___awdiv@divisor+1,7
   867     0029  282B               	goto	u321
   868     002A  282C               	goto	u320
   869     002B                     u321:
   870     002B  2833               	goto	l870
   871     002C                     u320:
   872     002C                     l866:
   873     002C  09B0               	comf	___awdiv@divisor,f
   874     002D  09B1               	comf	___awdiv@divisor+1,f
   875     002E  0AB0               	incf	___awdiv@divisor,f
   876     002F  1903               	skipnz
   877     0030  0AB1               	incf	___awdiv@divisor+1,f
   878     0031                     l868:
   879     0031  01B5               	clrf	___awdiv@sign
   880     0032  0AB5               	incf	___awdiv@sign,f
   881     0033                     l870:
   882     0033  1FB3               	btfss	___awdiv@dividend+1,7
   883     0034  2836               	goto	u331
   884     0035  2837               	goto	u330
   885     0036                     u331:
   886     0036  2840               	goto	l876
   887     0037                     u330:
   888     0037                     l872:
   889     0037  09B2               	comf	___awdiv@dividend,f
   890     0038  09B3               	comf	___awdiv@dividend+1,f
   891     0039  0AB2               	incf	___awdiv@dividend,f
   892     003A  1903               	skipnz
   893     003B  0AB3               	incf	___awdiv@dividend+1,f
   894     003C                     l874:
   895     003C  3001               	movlw	1
   896     003D  00F4               	movwf	??___awdiv
   897     003E  0874               	movf	??___awdiv,w
   898     003F  06B5               	xorwf	___awdiv@sign,f
   899     0040                     l876:
   900     0040  01B6               	clrf	___awdiv@quotient
   901     0041  01B7               	clrf	___awdiv@quotient+1
   902     0042                     l878:
   903     0042  0830               	movf	___awdiv@divisor,w
   904     0043  0431               	iorwf	___awdiv@divisor+1,w
   905     0044  1903               	btfsc	3,2
   906     0045  2847               	goto	u341
   907     0046  2848               	goto	u340
   908     0047                     u341:
   909     0047  287F               	goto	l898
   910     0048                     u340:
   911     0048                     l880:
   912     0048  01B4               	clrf	___awdiv@counter
   913     0049  0AB4               	incf	___awdiv@counter,f
   914     004A  2856               	goto	l886
   915     004B                     l882:
   916     004B  3001               	movlw	1
   917     004C                     u355:
   918     004C  1003               	clrc
   919     004D  0DB0               	rlf	___awdiv@divisor,f
   920     004E  0DB1               	rlf	___awdiv@divisor+1,f
   921     004F  3EFF               	addlw	-1
   922     0050  1D03               	skipz
   923     0051  284C               	goto	u355
   924     0052                     l884:
   925     0052  3001               	movlw	1
   926     0053  00F4               	movwf	??___awdiv
   927     0054  0874               	movf	??___awdiv,w
   928     0055  07B4               	addwf	___awdiv@counter,f
   929     0056                     l886:
   930     0056  1FB1               	btfss	___awdiv@divisor+1,7
   931     0057  2859               	goto	u361
   932     0058  285A               	goto	u360
   933     0059                     u361:
   934     0059  284B               	goto	l882
   935     005A                     u360:
   936     005A                     l888:
   937     005A  3001               	movlw	1
   938     005B                     u375:
   939     005B  1003               	clrc
   940     005C  0DB6               	rlf	___awdiv@quotient,f
   941     005D  0DB7               	rlf	___awdiv@quotient+1,f
   942     005E  3EFF               	addlw	-1
   943     005F  1D03               	skipz
   944     0060  285B               	goto	u375
   945     0061  0831               	movf	___awdiv@divisor+1,w
   946     0062  0233               	subwf	___awdiv@dividend+1,w
   947     0063  1D03               	skipz
   948     0064  2867               	goto	u385
   949     0065  0830               	movf	___awdiv@divisor,w
   950     0066  0232               	subwf	___awdiv@dividend,w
   951     0067                     u385:
   952     0067  1C03               	skipc
   953     0068  286A               	goto	u381
   954     0069  286B               	goto	u380
   955     006A                     u381:
   956     006A  2872               	goto	l894
   957     006B                     u380:
   958     006B                     l890:
   959     006B  0830               	movf	___awdiv@divisor,w
   960     006C  02B2               	subwf	___awdiv@dividend,f
   961     006D  0831               	movf	___awdiv@divisor+1,w
   962     006E  1C03               	skipc
   963     006F  03B3               	decf	___awdiv@dividend+1,f
   964     0070  02B3               	subwf	___awdiv@dividend+1,f
   965     0071                     l892:
   966     0071  1436               	bsf	___awdiv@quotient,0
   967     0072                     l894:
   968     0072  3001               	movlw	1
   969     0073                     u395:
   970     0073  1003               	clrc
   971     0074  0CB1               	rrf	___awdiv@divisor+1,f
   972     0075  0CB0               	rrf	___awdiv@divisor,f
   973     0076  3EFF               	addlw	-1
   974     0077  1D03               	skipz
   975     0078  2873               	goto	u395
   976     0079                     l896:
   977     0079  3001               	movlw	1
   978     007A  02B4               	subwf	___awdiv@counter,f
   979     007B  1D03               	btfss	3,2
   980     007C  287E               	goto	u401
   981     007D  287F               	goto	u400
   982     007E                     u401:
   983     007E  285A               	goto	l888
   984     007F                     u400:
   985     007F                     l898:
   986     007F  0835               	movf	___awdiv@sign,w
   987     0080  1903               	btfsc	3,2
   988     0081  2883               	goto	u411
   989     0082  2884               	goto	u410
   990     0083                     u411:
   991     0083  2889               	goto	l902
   992     0084                     u410:
   993     0084                     l900:
   994     0084  09B6               	comf	___awdiv@quotient,f
   995     0085  09B7               	comf	___awdiv@quotient+1,f
   996     0086  0AB6               	incf	___awdiv@quotient,f
   997     0087  1903               	skipnz
   998     0088  0AB7               	incf	___awdiv@quotient+1,f
   999     0089                     l902:
  1000     0089  0837               	movf	___awdiv@quotient+1,w
  1001     008A  00B1               	movwf	?___awdiv+1
  1002     008B  0836               	movf	___awdiv@quotient,w
  1003     008C  00B0               	movwf	?___awdiv
  1004     008D                     l327:
  1005     008D  0008               	return
  1006     008E                     __end_of___awdiv:
  1007                           
  1008                           	psect	text5
  1009     00EF                     __ptext5:	
  1010 ;; *************** function _isr *****************
  1011 ;; Defined at:
  1012 ;;		line 65 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          4       0       0       0       0
  1029 ;;      Totals:         4       0       0       0       0
  1030 ;;Total ram usage:        4 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		Interrupt level 1
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039     00EF                     _isr:	
  1040                           ;psect for function _isr
  1041                           
  1042     00EF                     i1l746:
  1043                           
  1044                           ;main.c: 66:     if (RBIF == 1){
  1045     00EF  1C0B               	btfss	11,0	;volatile
  1046     00F0  28F2               	goto	u11_21
  1047     00F1  28F3               	goto	u11_20
  1048     00F2                     u11_21:
  1049     00F2  2923               	goto	i1l65
  1050     00F3                     u11_20:
  1051     00F3                     i1l748:
  1052                           
  1053                           ;main.c: 67:     if (PORTBbits.RB6 == 0)
  1054     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1055     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1056     00F5  1B06               	btfsc	6,6	;volatile
  1057     00F6  28F8               	goto	u12_21
  1058     00F7  28F9               	goto	u12_20
  1059     00F8                     u12_21:
  1060     00F8  290D               	goto	i1l60
  1061     00F9                     u12_20:
  1062     00F9                     i1l750:
  1063                           
  1064                           ;main.c: 68:     {;main.c: 69:         _delay((unsigned long)((30)*(4000000/4000.0)));
  1065     00F9  3027               	movlw	39
  1066     00FA  00F1               	movwf	??_isr+1
  1067     00FB  30F5               	movlw	245
  1068     00FC  00F0               	movwf	??_isr
  1069     00FD                     u47_27:
  1070     00FD  0BF0               	decfsz	??_isr,f
  1071     00FE  28FD               	goto	u47_27
  1072     00FF  0BF1               	decfsz	??_isr+1,f
  1073     0100  28FD               	goto	u47_27
  1074     0101                     i1l752:
  1075                           
  1076                           ;main.c: 70:         if (PORTBbits.RB6 == 1){
  1077     0101  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0102  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0103  1F06               	btfss	6,6	;volatile
  1080     0104  2906               	goto	u13_21
  1081     0105  2907               	goto	u13_20
  1082     0106                     u13_21:
  1083     0106  2923               	goto	i1l65
  1084     0107                     u13_20:
  1085     0107                     i1l754:
  1086                           
  1087                           ;main.c: 71:             PORTC++;
  1088     0107  3001               	movlw	1
  1089     0108  00F0               	movwf	??_isr
  1090     0109  0870               	movf	??_isr,w
  1091     010A  0787               	addwf	7,f	;volatile
  1092     010B                     i1l756:
  1093                           
  1094                           ;main.c: 72:             INTCONbits.RBIF = 0;
  1095     010B  100B               	bcf	11,0	;volatile
  1096     010C  2923               	goto	i1l65
  1097     010D                     i1l60:	
  1098                           ;main.c: 75:     else if (PORTBbits.RB7 == 0){
  1099                           
  1100     010D  1B86               	btfsc	6,7	;volatile
  1101     010E  2910               	goto	u14_21
  1102     010F  2911               	goto	u14_20
  1103     0110                     u14_21:
  1104     0110  2923               	goto	i1l65
  1105     0111                     u14_20:
  1106     0111                     i1l758:
  1107                           
  1108                           ;main.c: 76:         _delay((unsigned long)((30)*(4000000/4000.0)));
  1109     0111  3027               	movlw	39
  1110     0112  00F1               	movwf	??_isr+1
  1111     0113  30F5               	movlw	245
  1112     0114  00F0               	movwf	??_isr
  1113     0115                     u48_27:
  1114     0115  0BF0               	decfsz	??_isr,f
  1115     0116  2915               	goto	u48_27
  1116     0117  0BF1               	decfsz	??_isr+1,f
  1117     0118  2915               	goto	u48_27
  1118     0119                     i1l760:
  1119                           
  1120                           ;main.c: 77:         if (PORTBbits.RB7 == 1){
  1121     0119  1283               	bcf	3,5	;RP0=0, select bank0
  1122     011A  1303               	bcf	3,6	;RP1=0, select bank0
  1123     011B  1F86               	btfss	6,7	;volatile
  1124     011C  291E               	goto	u15_21
  1125     011D  291F               	goto	u15_20
  1126     011E                     u15_21:
  1127     011E  2923               	goto	i1l62
  1128     011F                     u15_20:
  1129     011F                     i1l762:
  1130                           
  1131                           ;main.c: 78:             PORTC--;
  1132     011F  3001               	movlw	1
  1133     0120  0287               	subwf	7,f	;volatile
  1134     0121                     i1l764:
  1135                           
  1136                           ;main.c: 79:             INTCONbits.RBIF = 0;}
  1137     0121  100B               	bcf	11,0	;volatile
  1138     0122  2923               	goto	i1l65
  1139     0123                     i1l62:
  1140     0123                     i1l65:
  1141     0123  0873               	movf	??_isr+3,w
  1142     0124  008A               	movwf	10
  1143     0125  0E72               	swapf	??_isr+2,w
  1144     0126  0083               	movwf	3
  1145     0127  0EFE               	swapf	btemp,f
  1146     0128  0E7E               	swapf	btemp,w
  1147     0129  0009               	retfie
  1148     012A                     __end_of_isr:
  1149     007E                     btemp	set	126	;btemp
  1150     007E                     wtemp0	set	126
  1151                           
  1152                           	psect	intentry
  1153     0004                     __pintentry:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _isr: [wreg+status,2+status,0]
  1156                           
  1157     0004                     interrupt_function:
  1158     007E                     saved_w	set	btemp
  1159     0004  00FE               	movwf	btemp
  1160     0005  0E03               	swapf	3,w
  1161     0006  00F2               	movwf	??_isr+2
  1162     0007  080A               	movf	10,w
  1163     0008  00F3               	movwf	??_isr+3
  1164     0009  120A  118A  28EF   	ljmp	_isr
  1165                           
  1166                           	psect	idloc
  1167                           
  1168                           ;Config register IDLOC0 @ 0x2000
  1169                           ;	unspecified, using default values
  1170     2000                     	org	8192
  1171     2000  3FFF               	dw	16383
  1172                           
  1173                           ;Config register IDLOC1 @ 0x2001
  1174                           ;	unspecified, using default values
  1175     2001                     	org	8193
  1176     2001  3FFF               	dw	16383
  1177                           
  1178                           ;Config register IDLOC2 @ 0x2002
  1179                           ;	unspecified, using default values
  1180     2002                     	org	8194
  1181     2002  3FFF               	dw	16383
  1182                           
  1183                           ;Config register IDLOC3 @ 0x2003
  1184                           ;	unspecified, using default values
  1185     2003                     	org	8195
  1186     2003  3FFF               	dw	16383
  1187                           
  1188                           	psect	config
  1189                           
  1190                           ;Config register CONFIG1 @ 0x2007
  1191                           ;	Oscillator Selection bits
  1192                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1193                           ;	Watchdog Timer Enable bit
  1194                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1195                           ;	Power-up Timer Enable bit
  1196                           ;	PWRTE = OFF, PWRT disabled
  1197                           ;	RE3/MCLR pin function select bit
  1198                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1199                           ;	Code Protection bit
  1200                           ;	CP = OFF, Program memory code protection is disabled
  1201                           ;	Data Code Protection bit
  1202                           ;	CPD = OFF, Data memory code protection is disabled
  1203                           ;	Brown Out Reset Selection bits
  1204                           ;	BOREN = OFF, BOR disabled
  1205                           ;	Internal External Switchover bit
  1206                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1207                           ;	Fail-Safe Clock Monitor Enabled bit
  1208                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1209                           ;	Low Voltage Programming Enable bit
  1210                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1211                           ;	In-Circuit Debugger Mode bit
  1212                           ;	DEBUG = 0x1, unprogramme  1213     2007                     	org	8199
  1214     2007  20D4               	dw	8404
  1215                           
  1216                           ;Config register CONFIG2 @ 0x2008
  1217                           ;	Brown-out Reset Selection bit
  1218                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1219                           ;	Flash Program Memory Self Write Enable bits
  1220                           ;	WRT = OFF, Write protection off
  1221     2008                     	org	8200
  1222     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     10      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _main->_setup_ADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     625
                                              8 BANK0      2     2      0
                            ___awdiv
                              _setup
                          _setup_ADC
                        _setup_portb
 ---------------------------------------------------------------------------------
 (1) _setup_portb                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_ADC                                            1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _setup
   _setup_ADC
   _setup_portb

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Oct 11 09:08:50 2022

                      pc 0002                       l71 00A4                       l73 00A8  
                     l82 017A                       l74 00D4                       l85 0185  
                     l88 0147             ___awdiv@sign 0035                       fsr 0004  
                    l327 008D                      l700 0143                      l900 0084  
                    l902 0089                      l910 00A1                      l680 016B  
                    l920 00D1                      l912 00A9                      l690 0179  
                    l682 016E                      l930 00E0                      l922 00D2  
                    l914 00B1                      l906 008E                      l684 0172  
                    l692 017B                      l924 00D8                      l916 00C7  
                    l908 009D                      l870 0033                      l862 0025  
                    l686 0173                      l694 017E                      l926 00DE  
                    l918 00CB                      l880 0048                      l872 0037  
                    l864 0028                      l688 0174                      l696 0184  
                    l928 00DF                      l890 006B                      l882 004B  
                    l874 003C                      l866 002C                      l698 012A  
                    l892 0071                      l884 0052                      l876 0040  
                    l868 0031                      l894 0072                      l886 0056  
                    l878 0042                      l896 0079                      l888 005A  
                    l898 007F                      u400 007F                      u320 002C  
                    u401 007E                      u321 002B                      u410 0084  
                    u330 0037                      u411 0083                      u331 0036  
                    u340 0048                      u420 00A8                      u341 0047  
                    u421 00A7                      u430 00CB                      u431 00CA  
                    u360 005A                      u440 00D8                      u361 0059  
                    u441 00D7                      u355 004C                      u380 006B  
                    u381 006A                      u375 005B                      u385 0067  
                    u457 00E6                      u395 0073                      u467 0145  
                    _isr 00EF                      fsr0 0004                      indf 0000  
                   _ADIF 0066                     ?_isr 0070                     _IOCB 0096  
                   _RBIF 0058                     i1l60 010D                     i1l62 0123  
                   i1l65 0123                     _WPUB 0095                     _main 008E  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 008E                    _DISP1 0077  
                  _DISP2 0075          ___awdiv@divisor 0030                    i1l750 00F9  
                  i1l760 0119                    i1l752 0101                    i1l762 011F  
                  i1l754 0107                    i1l746 00EF                    i1l764 0121  
                  i1l756 010B                    i1l748 00F3                    i1l758 0111  
        ___awdiv@counter 0034                    u11_20 00F3                    u11_21 00F2  
                  u12_20 00F9                    u12_21 00F8                    u13_20 0107  
                  u13_21 0106                    u14_20 0111                    u14_21 0110  
                  u15_20 011F                    u15_21 011E                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u47_27 00FD  
                  u48_27 0115                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _setup 016B                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00EF                   ??_main 0038                   _ADRESH 001E  
       ___awdiv@dividend 0032                   ?_setup 0070                   _ANSELH 0189  
              ??___awdiv 0074         ___awdiv@quotient 0036                   saved_w 007E  
           ?_setup_portb 0070  __end_of__initialization 0021           __pcstackCOMMON 0070  
           __pidataBANK0 015B            __end_of_setup 017B           _OPTION_REGbits 0081  
                ??_setup 0074               __pmaintext 008E               __pintentry 0004  
                ___awdiv 0025                _ANSELbits 0188                  __ptext1 017B  
                __ptext2 012A                  __ptext3 016B                  __ptext4 0025  
                __ptext5 00EF                  _display 0020     end_of_initialization 0021  
      __end_of_setup_ADC 0148                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085      start_initialization 000F              __end_of_isr 012A  
             init_fetch0 0148              __pdataBANK0 0020              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0030                 ?___awdiv 0030  
      interrupt_function 0004                _setup_ADC 012A               _ADCON0bits 001F  
             _ADCON1bits 009F            ??_setup_portb 0074               ?_setup_ADC 0070  
    __end_of_setup_portb 0186               _INTCONbits 000B                 init_ram0 014C  
               intlevel1 0000              ??_setup_ADC 0074              _setup_portb 017B  
