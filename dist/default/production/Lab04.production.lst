

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 16 19:54:38 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     008F                     	;# 
   103     0090                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0095                     	;# 
   111     0096                     	;# 
   112     0097                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     0105                     	;# 
   122     0107                     	;# 
   123     0108                     	;# 
   124     0109                     	;# 
   125     010C                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     0185                     	;# 
   131     0187                     	;# 
   132     0188                     	;# 
   133     0189                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     008F                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0097                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009A                     	;# 
   194     009B                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     0105                     	;# 
   200     0107                     	;# 
   201     0108                     	;# 
   202     0109                     	;# 
   203     010C                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     0185                     	;# 
   209     0187                     	;# 
   210     0188                     	;# 
   211     0189                     	;# 
   212     018C                     	;# 
   213     018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216     0162                     __pidataBANK0:
   217                           
   218                           ;initializer for _display
   219     0162  343F               	retlw	63
   220     0163  3406               	retlw	6
   221     0164  345B               	retlw	91
   222     0165  344F               	retlw	79
   223     0166  3466               	retlw	102
   224     0167  346D               	retlw	109
   225     0168  347D               	retlw	125
   226     0169  3407               	retlw	7
   227     016A  347F               	retlw	127
   228     016B  346F               	retlw	111
   229     016C  3477               	retlw	119
   230     016D  347C               	retlw	124
   231     016E  3439               	retlw	57
   232     016F  345E               	retlw	94
   233     0170  3479               	retlw	121
   234     0171  3471               	retlw	113
   235     0005                     _PORTAbits	set	5
   236     0006                     _PORTB	set	6
   237     001E                     _ADRESH	set	30
   238     001F                     _ADCON0bits	set	31
   239     0008                     _PORTD	set	8
   240     000B                     _INTCONbits	set	11
   241     0007                     _PORTC	set	7
   242     0006                     _PORTBbits	set	6
   243     0066                     _ADIF	set	102
   244     0058                     _RBIF	set	88
   245     009F                     _ADCON1bits	set	159
   246     0085                     _TRISAbits	set	133
   247     0081                     _OPTION_REGbits	set	129
   248     0095                     _WPUB	set	149
   249     0096                     _IOCB	set	150
   250     0088                     _TRISD	set	136
   251     0087                     _TRISC	set	135
   252     0086                     _TRISB	set	134
   253     0188                     _ANSELbits	set	392
   254     0189                     _ANSELH	set	393
   255                           
   256                           	psect	cinit
   257     000F                     start_initialization:	
   258                           ; #config settings
   259                           
   260     000F                     __initialization:
   261                           
   262                           ; Initialize objects allocated to BANK0
   263     000F  1383               	bcf	3,7	;select IRP bank0
   264     0010  3030               	movlw	low (__pdataBANK0+16)
   265     0011  00FD               	movwf	btemp+-1
   266     0012  3001               	movlw	high __pidataBANK0
   267     0013  00FE               	movwf	btemp
   268     0014  3062               	movlw	low __pidataBANK0
   269     0015  00FF               	movwf	btemp+1
   270     0016  3020               	movlw	low __pdataBANK0
   271     0017  0084               	movwf	4
   272     0018  120A  118A  2153  120A  118A  	fcall	init_ram0
   273                           
   274                           ; Clear objects allocated to COMMON
   275     001D  01F5               	clrf	__pbssCOMMON& (0+127)
   276     001E  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   277     001F  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   278     0020  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   279     0021                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282     0021                     __end_of__initialization:
   283     0021  0183               	clrf	3
   284     0022  120A  118A  288E   	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssCOMMON
   287     0075                     __pbssCOMMON:
   288     0075                     _DISP2:
   289     0075                     	ds	2
   290     0077                     _DISP1:
   291     0077                     	ds	2
   292                           
   293                           	psect	dataBANK0
   294     0020                     __pdataBANK0:
   295     0020                     _display:
   296     0020                     	ds	16
   297                           
   298                           	psect	inittext
   299     014F                     init_fetch0:	
   300                           ;	Called with low address in FSR and high address in W
   301                           
   302     014F  087E               	movf	btemp,w
   303     0150  008A               	movwf	10
   304     0151  087F               	movf	btemp+1,w
   305     0152  0082               	movwf	2
   306     0153                     init_ram0:	
   307                           ;Called with:
   308                           ;	high address of idata address in btemp 
   309                           ;	low address of idata address in btemp+1 
   310                           ;	low address of data in FSR
   311                           ;	high address + 1 of data in btemp-1
   312                           
   313     0153  120A  118A  214F  120A  118A  	fcall	init_fetch0
   314     0158  0080               	movwf	0
   315     0159  0A84               	incf	4,f
   316     015A  0804               	movf	4,w
   317     015B  067D               	xorwf	btemp+-1,w
   318     015C  1903               	btfsc	3,2
   319     015D  3400               	retlw	0
   320     015E  0AFF               	incf	btemp+1,f
   321     015F  1903               	btfsc	3,2
   322     0160  0AFE               	incf	btemp,f
   323     0161  2953               	goto	init_ram0
   324                           
   325                           	psect	cstackCOMMON
   326     0070                     __pcstackCOMMON:
   327     0070                     ?_setup:
   328     0070                     ?_setup_portb:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?_setup_ADC:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_Comparador:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_isr:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ??_isr:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348     0070                     	ds	4
   349     0074                     ??_setup:
   350     0074                     ??_setup_portb:	
   351                           ; 1 bytes @ 0x4
   352                           
   353     0074                     ??_setup_ADC:	
   354                           ; 1 bytes @ 0x4
   355                           
   356     0074                     ??_Comparador:	
   357                           ; 1 bytes @ 0x4
   358                           
   359     0074                     ??___awdiv:	
   360                           ; 1 bytes @ 0x4
   361                           
   362                           
   363                           ; 1 bytes @ 0x4
   364     0074                     	ds	1
   365                           
   366                           	psect	cstackBANK0
   367     0030                     __pcstackBANK0:
   368     0030                     ?___awdiv:
   369     0030                     ___awdiv@divisor:	
   370                           ; 2 bytes @ 0x0
   371                           
   372                           
   373                           ; 2 bytes @ 0x0
   374     0030                     	ds	2
   375     0032                     ___awdiv@dividend:
   376                           
   377                           ; 2 bytes @ 0x2
   378     0032                     	ds	2
   379     0034                     ___awdiv@counter:
   380                           
   381                           ; 1 bytes @ 0x4
   382     0034                     	ds	1
   383     0035                     ___awdiv@sign:
   384                           
   385                           ; 1 bytes @ 0x5
   386     0035                     	ds	1
   387     0036                     ___awdiv@quotient:
   388                           
   389                           ; 2 bytes @ 0x6
   390     0036                     	ds	2
   391     0038                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x8
   394     0038                     	ds	2
   395                           
   396                           	psect	maintext
   397     008E                     __pmaintext:	
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 98 in file "main.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          0       2       0       0       0
   420 ;;      Totals:         0       2       0       0       0
   421 ;;Total ram usage:        2 bytes
   422 ;; Hardware stack levels required when called: 2
   423 ;; This function calls:
   424 ;;		_Comparador
   425 ;;		___awdiv
   426 ;;		_setup
   427 ;;		_setup_ADC
   428 ;;		_setup_portb
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434     008E                     _main:	
   435                           ;psect for function _main
   436                           
   437     008E                     l921:	
   438                           ;incstack = 0
   439                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   440                           
   441                           
   442                           ;main.c: 99:     setup();
   443     008E  120A  118A  2172  120A  118A  	fcall	_setup
   444                           
   445                           ;main.c: 100:     setup_portb();
   446     0093  120A  118A  218E  120A  118A  	fcall	_setup_portb
   447                           
   448                           ;main.c: 101:     setup_ADC();
   449     0098  120A  118A  2131  120A  118A  	fcall	_setup_ADC
   450     009D                     l923:
   451                           
   452                           ;main.c: 102:     PORTD = display[0];
   453     009D  1283               	bcf	3,5	;RP0=0, select bank0
   454     009E  1303               	bcf	3,6	;RP1=0, select bank0
   455     009F  0820               	movf	_display,w
   456     00A0  0088               	movwf	8	;volatile
   457     00A1                     l925:
   458                           
   459                           ;main.c: 104:         ADCON0bits.GO = 1;
   460     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   461     00A2  1303               	bcf	3,6	;RP1=0, select bank0
   462     00A3  149F               	bsf	31,1	;volatile
   463     00A4                     l73:	
   464                           ;main.c: 105:         while (ADCON0bits.GO == 1);
   465                           
   466     00A4  189F               	btfsc	31,1	;volatile
   467     00A5  28A7               	goto	u431
   468     00A6  28A8               	goto	u430
   469     00A7                     u431:
   470     00A7  28A4               	goto	l73
   471     00A8                     u430:
   472     00A8                     l75:
   473                           
   474                           ;main.c: 106:         ADIF = 0;
   475     00A8  130C               	bcf	12,6	;volatile
   476     00A9                     l927:
   477                           
   478                           ;main.c: 107:         DISP1 = (ADRESH%16);
   479     00A9  081E               	movf	30,w	;volatile
   480     00AA  390F               	andlw	15
   481     00AB  00B8               	movwf	??_main
   482     00AC  01B9               	clrf	??_main+1
   483     00AD  0838               	movf	??_main,w
   484     00AE  00F7               	movwf	_DISP1
   485     00AF  0839               	movf	??_main+1,w
   486     00B0  00F8               	movwf	_DISP1+1
   487     00B1                     l929:
   488                           
   489                           ;main.c: 108:         DISP2 = (ADRESH/16);
   490     00B1  3010               	movlw	16
   491     00B2  00B0               	movwf	___awdiv@divisor
   492     00B3  3000               	movlw	0
   493     00B4  00B1               	movwf	___awdiv@divisor+1
   494     00B5  081E               	movf	30,w	;volatile
   495     00B6  00B8               	movwf	??_main
   496     00B7  01B9               	clrf	??_main+1
   497     00B8  0838               	movf	??_main,w
   498     00B9  00B2               	movwf	___awdiv@dividend
   499     00BA  0839               	movf	??_main+1,w
   500     00BB  00B3               	movwf	___awdiv@dividend+1
   501     00BC  120A  118A  2025  120A  118A  	fcall	___awdiv
   502     00C1  1283               	bcf	3,5	;RP0=0, select bank0
   503     00C2  1303               	bcf	3,6	;RP1=0, select bank0
   504     00C3  0831               	movf	?___awdiv+1,w
   505     00C4  00F6               	movwf	_DISP2+1
   506     00C5  0830               	movf	?___awdiv,w
   507     00C6  00F5               	movwf	_DISP2
   508     00C7                     l931:
   509                           
   510                           ;main.c: 109:         Comparador();
   511     00C7  120A  118A  2182  120A  118A  	fcall	_Comparador
   512     00CC                     l933:
   513                           
   514                           ;main.c: 110:         if (PORTBbits.RB0 == 1){
   515     00CC  1283               	bcf	3,5	;RP0=0, select bank0
   516     00CD  1303               	bcf	3,6	;RP1=0, select bank0
   517     00CE  1C06               	btfss	6,0	;volatile
   518     00CF  28D1               	goto	u441
   519     00D0  28D2               	goto	u440
   520     00D1                     u441:
   521     00D1  28DB               	goto	l76
   522     00D2                     u440:
   523     00D2                     l935:
   524                           
   525                           ;main.c: 111:             PORTD = display[DISP1];
   526     00D2  0877               	movf	_DISP1,w
   527     00D3  3E20               	addlw	(low (_display| 0))& (0+255)
   528     00D4  0084               	movwf	4
   529     00D5  1383               	bcf	3,7	;select IRP bank0
   530     00D6  0800               	movf	0,w
   531     00D7  0088               	movwf	8	;volatile
   532     00D8                     l937:
   533                           
   534                           ;main.c: 112:             PORTBbits.RB0 = 0;
   535     00D8  1006               	bcf	6,0	;volatile
   536     00D9                     l939:
   537                           
   538                           ;main.c: 113:             PORTBbits.RB1 = 1;
   539     00D9  1486               	bsf	6,1	;volatile
   540                           
   541                           ;main.c: 114:             }
   542     00DA  28E7               	goto	l947
   543     00DB                     l76:	
   544                           ;main.c: 115:         else if(PORTBbits.RB1 == 1){
   545                           
   546     00DB  1C86               	btfss	6,1	;volatile
   547     00DC  28DE               	goto	u451
   548     00DD  28DF               	goto	u450
   549     00DE                     u451:
   550     00DE  28E7               	goto	l947
   551     00DF                     u450:
   552     00DF                     l941:
   553                           
   554                           ;main.c: 116:             PORTD = display[DISP2];
   555     00DF  0875               	movf	_DISP2,w
   556     00E0  3E20               	addlw	(low (_display| 0))& (0+255)
   557     00E1  0084               	movwf	4
   558     00E2  1383               	bcf	3,7	;select IRP bank0
   559     00E3  0800               	movf	0,w
   560     00E4  0088               	movwf	8	;volatile
   561     00E5                     l943:
   562                           
   563                           ;main.c: 117:             PORTBbits.RB0 = 1;
   564     00E5  1406               	bsf	6,0	;volatile
   565     00E6                     l945:
   566                           
   567                           ;main.c: 118:             PORTBbits.RB1 = 0;
   568     00E6  1086               	bcf	6,1	;volatile
   569     00E7                     l947:
   570                           
   571                           ;main.c: 120:         _delay((unsigned long)((5)*(4000000/4000.0)));
   572     00E7  3007               	movlw	7
   573     00E8  1283               	bcf	3,5	;RP0=0, select bank0
   574     00E9  1303               	bcf	3,6	;RP1=0, select bank0
   575     00EA  00B9               	movwf	??_main+1
   576     00EB  307C               	movlw	124
   577     00EC  00B8               	movwf	??_main
   578     00ED                     u467:
   579     00ED  0BB8               	decfsz	??_main,f
   580     00EE  28ED               	goto	u467
   581     00EF  0BB9               	decfsz	??_main+1,f
   582     00F0  28ED               	goto	u467
   583     00F1  0000               	nop
   584     00F2  28A1               	goto	l925
   585     00F3  120A  118A  280C   	ljmp	start
   586     00F6                     __end_of_main:
   587                           
   588                           	psect	text1
   589     018E                     __ptext1:	
   590 ;; *************** function _setup_portb *****************
   591 ;; Defined at:
   592 ;;		line 138 in file "main.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; Hardware stack levels required when called: 1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620     018E                     _setup_portb:	
   621                           ;psect for function _setup_portb
   622                           
   623     018E                     l699:	
   624                           ;incstack = 0
   625                           ; Regs used in _setup_portb: [wreg]
   626                           
   627                           
   628                           ;main.c: 139:     INTCONbits.GIE = 1;
   629     018E  178B               	bsf	11,7	;volatile
   630                           
   631                           ;main.c: 140:     INTCONbits.RBIE = 1;
   632     018F  158B               	bsf	11,3	;volatile
   633                           
   634                           ;main.c: 141:     INTCONbits.RBIF = 0;
   635     0190  100B               	bcf	11,0	;volatile
   636     0191                     l701:
   637                           
   638                           ;main.c: 142:     IOCB = 0b11000000;
   639     0191  30C0               	movlw	192
   640     0192  1683               	bsf	3,5	;RP0=1, select bank1
   641     0193  1303               	bcf	3,6	;RP1=0, select bank1
   642     0194  0096               	movwf	22	;volatile
   643                           
   644                           ;main.c: 143:     WPUB = 0b11000000;
   645     0195  30C0               	movlw	192
   646     0196  0095               	movwf	21	;volatile
   647     0197                     l703:
   648                           
   649                           ;main.c: 144:     OPTION_REGbits.nRBPU = 0;
   650     0197  1381               	bcf	1,7	;volatile
   651     0198                     l87:
   652     0198  0008               	return
   653     0199                     __end_of_setup_portb:
   654                           
   655                           	psect	text2
   656     0131                     __ptext2:	
   657 ;; *************** function _setup_ADC *****************
   658 ;; Defined at:
   659 ;;		line 150 in file "main.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          1       0       0       0       0
   676 ;;      Totals:         1       0       0       0       0
   677 ;;Total ram usage:        1 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; Hardware stack levels required when called: 1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687     0131                     _setup_ADC:	
   688                           ;psect for function _setup_ADC
   689                           
   690     0131                     l705:	
   691                           ;incstack = 0
   692                           ; Regs used in _setup_ADC: [wreg]
   693                           
   694                           
   695                           ;main.c: 151:     PORTAbits.RA0 = 0;
   696     0131  1283               	bcf	3,5	;RP0=0, select bank0
   697     0132  1303               	bcf	3,6	;RP1=0, select bank0
   698     0133  1005               	bcf	5,0	;volatile
   699                           
   700                           ;main.c: 152:     TRISAbits.TRISA0 = 1;
   701     0134  1683               	bsf	3,5	;RP0=1, select bank1
   702     0135  1303               	bcf	3,6	;RP1=0, select bank1
   703     0136  1405               	bsf	5,0	;volatile
   704                           
   705                           ;main.c: 153:     ANSELbits.ANS0 = 1;
   706     0137  1683               	bsf	3,5	;RP0=1, select bank3
   707     0138  1703               	bsf	3,6	;RP1=1, select bank3
   708     0139  1408               	bsf	8,0	;volatile
   709                           
   710                           ;main.c: 155:     ADCON0bits.ADCS1 = 0;
   711     013A  1283               	bcf	3,5	;RP0=0, select bank0
   712     013B  1303               	bcf	3,6	;RP1=0, select bank0
   713     013C  139F               	bcf	31,7	;volatile
   714                           
   715                           ;main.c: 156:     ADCON0bits.ADCS0 = 1;
   716     013D  171F               	bsf	31,6	;volatile
   717                           
   718                           ;main.c: 158:     ADCON1bits.VCFG1 = 0;
   719     013E  1683               	bsf	3,5	;RP0=1, select bank1
   720     013F  1303               	bcf	3,6	;RP1=0, select bank1
   721     0140  129F               	bcf	31,5	;volatile
   722                           
   723                           ;main.c: 159:     ADCON1bits.VCFG0 = 0;
   724     0141  121F               	bcf	31,4	;volatile
   725                           
   726                           ;main.c: 161:     ADCON1bits.ADFM = 0;
   727     0142  139F               	bcf	31,7	;volatile
   728                           
   729                           ;main.c: 163:     ADCON0bits.CHS3 = 0;
   730     0143  1283               	bcf	3,5	;RP0=0, select bank0
   731     0144  1303               	bcf	3,6	;RP1=0, select bank0
   732     0145  129F               	bcf	31,5	;volatile
   733                           
   734                           ;main.c: 164:     ADCON0bits.CHS2 = 0;
   735     0146  121F               	bcf	31,4	;volatile
   736                           
   737                           ;main.c: 165:     ADCON0bits.CHS1 = 0;
   738     0147  119F               	bcf	31,3	;volatile
   739                           
   740                           ;main.c: 166:     ADCON0bits.CHS0 = 0;
   741     0148  111F               	bcf	31,2	;volatile
   742                           
   743                           ;main.c: 168:     ADCON0bits.ADON = 1;
   744     0149  141F               	bsf	31,0	;volatile
   745     014A                     l707:
   746                           
   747                           ;main.c: 169:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   748     014A  3021               	movlw	33
   749     014B  00F4               	movwf	??_setup_ADC
   750     014C                     u477:
   751     014C  0BF4               	decfsz	??_setup_ADC,f
   752     014D  294C               	goto	u477
   753     014E                     l90:
   754     014E  0008               	return
   755     014F                     __end_of_setup_ADC:
   756                           
   757                           	psect	text3
   758     0172                     __ptext3:	
   759 ;; *************** function _setup *****************
   760 ;; Defined at:
   761 ;;		line 126 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789     0172                     _setup:	
   790                           ;psect for function _setup
   791                           
   792     0172                     l687:	
   793                           ;incstack = 0
   794                           ; Regs used in _setup: [wreg+status,2]
   795                           
   796                           
   797                           ;main.c: 127:     ANSELH = 0;
   798     0172  1683               	bsf	3,5	;RP0=1, select bank3
   799     0173  1703               	bsf	3,6	;RP1=1, select bank3
   800     0174  0189               	clrf	9	;volatile
   801     0175                     l689:
   802                           
   803                           ;main.c: 128:     TRISB = 0b11000000;
   804     0175  30C0               	movlw	192
   805     0176  1683               	bsf	3,5	;RP0=1, select bank1
   806     0177  1303               	bcf	3,6	;RP1=0, select bank1
   807     0178  0086               	movwf	6	;volatile
   808     0179                     l691:
   809                           
   810                           ;main.c: 129:     TRISC = 0;
   811     0179  0187               	clrf	7	;volatile
   812     017A                     l693:
   813                           
   814                           ;main.c: 130:     TRISD = 0;
   815     017A  0188               	clrf	8	;volatile
   816     017B                     l695:
   817                           
   818                           ;main.c: 131:     PORTC = 0;
   819     017B  1283               	bcf	3,5	;RP0=0, select bank0
   820     017C  1303               	bcf	3,6	;RP1=0, select bank0
   821     017D  0187               	clrf	7	;volatile
   822                           
   823                           ;main.c: 132:     PORTB = 1;
   824     017E  3001               	movlw	1
   825     017F  0086               	movwf	6	;volatile
   826     0180                     l697:
   827                           
   828                           ;main.c: 133:     PORTD = 0;
   829     0180  0188               	clrf	8	;volatile
   830     0181                     l84:
   831     0181  0008               	return
   832     0182                     __end_of_setup:
   833                           
   834                           	psect	text4
   835     0025                     __ptext4:	
   836 ;; *************** function ___awdiv *****************
   837 ;; Defined at:
   838 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  divisor         2    0[BANK0 ] int 
   841 ;;  dividend        2    2[BANK0 ] int 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  quotient        2    6[BANK0 ] int 
   844 ;;  sign            1    5[BANK0 ] unsigned char 
   845 ;;  counter         1    4[BANK0 ] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2    0[BANK0 ] int 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       4       0       0       0
   856 ;;      Locals:         0       4       0       0       0
   857 ;;      Temps:          1       0       0       0       0
   858 ;;      Totals:         1       8       0       0       0
   859 ;;Total ram usage:        9 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869     0025                     ___awdiv:	
   870                           ;psect for function ___awdiv
   871                           
   872     0025                     l877:	
   873                           ;incstack = 0
   874                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   875                           
   876     0025  1283               	bcf	3,5	;RP0=0, select bank0
   877     0026  1303               	bcf	3,6	;RP1=0, select bank0
   878     0027  01B5               	clrf	___awdiv@sign
   879     0028                     l879:
   880     0028  1FB1               	btfss	___awdiv@divisor+1,7
   881     0029  282B               	goto	u331
   882     002A  282C               	goto	u330
   883     002B                     u331:
   884     002B  2833               	goto	l885
   885     002C                     u330:
   886     002C                     l881:
   887     002C  09B0               	comf	___awdiv@divisor,f
   888     002D  09B1               	comf	___awdiv@divisor+1,f
   889     002E  0AB0               	incf	___awdiv@divisor,f
   890     002F  1903               	skipnz
   891     0030  0AB1               	incf	___awdiv@divisor+1,f
   892     0031                     l883:
   893     0031  01B5               	clrf	___awdiv@sign
   894     0032  0AB5               	incf	___awdiv@sign,f
   895     0033                     l885:
   896     0033  1FB3               	btfss	___awdiv@dividend+1,7
   897     0034  2836               	goto	u341
   898     0035  2837               	goto	u340
   899     0036                     u341:
   900     0036  2840               	goto	l891
   901     0037                     u340:
   902     0037                     l887:
   903     0037  09B2               	comf	___awdiv@dividend,f
   904     0038  09B3               	comf	___awdiv@dividend+1,f
   905     0039  0AB2               	incf	___awdiv@dividend,f
   906     003A  1903               	skipnz
   907     003B  0AB3               	incf	___awdiv@dividend+1,f
   908     003C                     l889:
   909     003C  3001               	movlw	1
   910     003D  00F4               	movwf	??___awdiv
   911     003E  0874               	movf	??___awdiv,w
   912     003F  06B5               	xorwf	___awdiv@sign,f
   913     0040                     l891:
   914     0040  01B6               	clrf	___awdiv@quotient
   915     0041  01B7               	clrf	___awdiv@quotient+1
   916     0042                     l893:
   917     0042  0830               	movf	___awdiv@divisor,w
   918     0043  0431               	iorwf	___awdiv@divisor+1,w
   919     0044  1903               	btfsc	3,2
   920     0045  2847               	goto	u351
   921     0046  2848               	goto	u350
   922     0047                     u351:
   923     0047  287F               	goto	l913
   924     0048                     u350:
   925     0048                     l895:
   926     0048  01B4               	clrf	___awdiv@counter
   927     0049  0AB4               	incf	___awdiv@counter,f
   928     004A  2856               	goto	l901
   929     004B                     l897:
   930     004B  3001               	movlw	1
   931     004C                     u365:
   932     004C  1003               	clrc
   933     004D  0DB0               	rlf	___awdiv@divisor,f
   934     004E  0DB1               	rlf	___awdiv@divisor+1,f
   935     004F  3EFF               	addlw	-1
   936     0050  1D03               	skipz
   937     0051  284C               	goto	u365
   938     0052                     l899:
   939     0052  3001               	movlw	1
   940     0053  00F4               	movwf	??___awdiv
   941     0054  0874               	movf	??___awdiv,w
   942     0055  07B4               	addwf	___awdiv@counter,f
   943     0056                     l901:
   944     0056  1FB1               	btfss	___awdiv@divisor+1,7
   945     0057  2859               	goto	u371
   946     0058  285A               	goto	u370
   947     0059                     u371:
   948     0059  284B               	goto	l897
   949     005A                     u370:
   950     005A                     l903:
   951     005A  3001               	movlw	1
   952     005B                     u385:
   953     005B  1003               	clrc
   954     005C  0DB6               	rlf	___awdiv@quotient,f
   955     005D  0DB7               	rlf	___awdiv@quotient+1,f
   956     005E  3EFF               	addlw	-1
   957     005F  1D03               	skipz
   958     0060  285B               	goto	u385
   959     0061  0831               	movf	___awdiv@divisor+1,w
   960     0062  0233               	subwf	___awdiv@dividend+1,w
   961     0063  1D03               	skipz
   962     0064  2867               	goto	u395
   963     0065  0830               	movf	___awdiv@divisor,w
   964     0066  0232               	subwf	___awdiv@dividend,w
   965     0067                     u395:
   966     0067  1C03               	skipc
   967     0068  286A               	goto	u391
   968     0069  286B               	goto	u390
   969     006A                     u391:
   970     006A  2872               	goto	l909
   971     006B                     u390:
   972     006B                     l905:
   973     006B  0830               	movf	___awdiv@divisor,w
   974     006C  02B2               	subwf	___awdiv@dividend,f
   975     006D  0831               	movf	___awdiv@divisor+1,w
   976     006E  1C03               	skipc
   977     006F  03B3               	decf	___awdiv@dividend+1,f
   978     0070  02B3               	subwf	___awdiv@dividend+1,f
   979     0071                     l907:
   980     0071  1436               	bsf	___awdiv@quotient,0
   981     0072                     l909:
   982     0072  3001               	movlw	1
   983     0073                     u405:
   984     0073  1003               	clrc
   985     0074  0CB1               	rrf	___awdiv@divisor+1,f
   986     0075  0CB0               	rrf	___awdiv@divisor,f
   987     0076  3EFF               	addlw	-1
   988     0077  1D03               	skipz
   989     0078  2873               	goto	u405
   990     0079                     l911:
   991     0079  3001               	movlw	1
   992     007A  02B4               	subwf	___awdiv@counter,f
   993     007B  1D03               	btfss	3,2
   994     007C  287E               	goto	u411
   995     007D  287F               	goto	u410
   996     007E                     u411:
   997     007E  285A               	goto	l903
   998     007F                     u410:
   999     007F                     l913:
  1000     007F  0835               	movf	___awdiv@sign,w
  1001     0080  1903               	btfsc	3,2
  1002     0081  2883               	goto	u421
  1003     0082  2884               	goto	u420
  1004     0083                     u421:
  1005     0083  2889               	goto	l917
  1006     0084                     u420:
  1007     0084                     l915:
  1008     0084  09B6               	comf	___awdiv@quotient,f
  1009     0085  09B7               	comf	___awdiv@quotient+1,f
  1010     0086  0AB6               	incf	___awdiv@quotient,f
  1011     0087  1903               	skipnz
  1012     0088  0AB7               	incf	___awdiv@quotient+1,f
  1013     0089                     l917:
  1014     0089  0837               	movf	___awdiv@quotient+1,w
  1015     008A  00B1               	movwf	?___awdiv+1
  1016     008B  0836               	movf	___awdiv@quotient,w
  1017     008C  00B0               	movwf	?___awdiv
  1018     008D                     l334:
  1019     008D  0008               	return
  1020     008E                     __end_of___awdiv:
  1021                           
  1022                           	psect	text5
  1023     0182                     __ptext5:	
  1024 ;; *************** function _Comparador *****************
  1025 ;; Defined at:
  1026 ;;		line 174 in file "main.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 1
  1047 ;; This function calls:
  1048 ;;		Nothing
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054     0182                     _Comparador:	
  1055                           ;psect for function _Comparador
  1056                           
  1057     0182                     l709:	
  1058                           ;incstack = 0
  1059                           ; Regs used in _Comparador: [wreg]
  1060                           
  1061                           
  1062                           ;main.c: 175:     if (ADRESH >= PORTC){
  1063     0182  1283               	bcf	3,5	;RP0=0, select bank0
  1064     0183  1303               	bcf	3,6	;RP1=0, select bank0
  1065     0184  0807               	movf	7,w	;volatile
  1066     0185  021E               	subwf	30,w	;volatile
  1067     0186  1C03               	skipc
  1068     0187  2989               	goto	u11
  1069     0188  298A               	goto	u10
  1070     0189                     u11:
  1071     0189  298C               	goto	l93
  1072     018A                     u10:
  1073     018A                     l711:
  1074                           
  1075                           ;main.c: 176:         PORTBbits.RB5 = 1;
  1076     018A  1686               	bsf	6,5	;volatile
  1077                           
  1078                           ;main.c: 177:     }
  1079     018B  298D               	goto	l95
  1080     018C                     l93:	
  1081                           ;main.c: 178:     else {
  1082                           
  1083                           
  1084                           ;main.c: 179:         PORTBbits.RB5 = 0;
  1085     018C  1286               	bcf	6,5	;volatile
  1086     018D                     l95:
  1087     018D  0008               	return
  1088     018E                     __end_of_Comparador:
  1089                           
  1090                           	psect	text6
  1091     00F6                     __ptext6:	
  1092 ;; *************** function _isr *****************
  1093 ;; Defined at:
  1094 ;;		line 77 in file "main.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          4       0       0       0       0
  1111 ;;      Totals:         4       0       0       0       0
  1112 ;;Total ram usage:        4 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		Interrupt level 1
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121     00F6                     _isr:	
  1122                           ;psect for function _isr
  1123                           
  1124     00F6                     i1l757:
  1125                           
  1126                           ;main.c: 78:     if (RBIF == 1){
  1127     00F6  1C0B               	btfss	11,0	;volatile
  1128     00F7  28F9               	goto	u12_21
  1129     00F8  28FA               	goto	u12_20
  1130     00F9                     u12_21:
  1131     00F9  292A               	goto	i1l67
  1132     00FA                     u12_20:
  1133     00FA                     i1l759:
  1134                           
  1135                           ;main.c: 79:     if (PORTBbits.RB6 == 0)
  1136     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1137     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1138     00FC  1B06               	btfsc	6,6	;volatile
  1139     00FD  28FF               	goto	u13_21
  1140     00FE  2900               	goto	u13_20
  1141     00FF                     u13_21:
  1142     00FF  2914               	goto	i1l62
  1143     0100                     u13_20:
  1144     0100                     i1l761:
  1145                           
  1146                           ;main.c: 80:     {;main.c: 81:         _delay((unsigned long)((30)*(4000000/4000.0)));
  1147     0100  3027               	movlw	39
  1148     0101  00F1               	movwf	??_isr+1
  1149     0102  30F5               	movlw	245
  1150     0103  00F0               	movwf	??_isr
  1151     0104                     u48_27:
  1152     0104  0BF0               	decfsz	??_isr,f
  1153     0105  2904               	goto	u48_27
  1154     0106  0BF1               	decfsz	??_isr+1,f
  1155     0107  2904               	goto	u48_27
  1156     0108                     i1l763:
  1157                           
  1158                           ;main.c: 82:         if (PORTBbits.RB6 == 1){
  1159     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1160     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1161     010A  1F06               	btfss	6,6	;volatile
  1162     010B  290D               	goto	u14_21
  1163     010C  290E               	goto	u14_20
  1164     010D                     u14_21:
  1165     010D  292A               	goto	i1l67
  1166     010E                     u14_20:
  1167     010E                     i1l765:
  1168                           
  1169                           ;main.c: 83:             PORTC++;
  1170     010E  3001               	movlw	1
  1171     010F  00F0               	movwf	??_isr
  1172     0110  0870               	movf	??_isr,w
  1173     0111  0787               	addwf	7,f	;volatile
  1174     0112                     i1l767:
  1175                           
  1176                           ;main.c: 84:             INTCONbits.RBIF = 0;
  1177     0112  100B               	bcf	11,0	;volatile
  1178     0113  292A               	goto	i1l67
  1179     0114                     i1l62:	
  1180                           ;main.c: 87:     else if (PORTBbits.RB7 == 0){
  1181                           
  1182     0114  1B86               	btfsc	6,7	;volatile
  1183     0115  2917               	goto	u15_21
  1184     0116  2918               	goto	u15_20
  1185     0117                     u15_21:
  1186     0117  292A               	goto	i1l67
  1187     0118                     u15_20:
  1188     0118                     i1l769:
  1189                           
  1190                           ;main.c: 88:         _delay((unsigned long)((30)*(4000000/4000.0)));
  1191     0118  3027               	movlw	39
  1192     0119  00F1               	movwf	??_isr+1
  1193     011A  30F5               	movlw	245
  1194     011B  00F0               	movwf	??_isr
  1195     011C                     u49_27:
  1196     011C  0BF0               	decfsz	??_isr,f
  1197     011D  291C               	goto	u49_27
  1198     011E  0BF1               	decfsz	??_isr+1,f
  1199     011F  291C               	goto	u49_27
  1200     0120                     i1l771:
  1201                           
  1202                           ;main.c: 89:         if (PORTBbits.RB7 == 1){
  1203     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0122  1F86               	btfss	6,7	;volatile
  1206     0123  2925               	goto	u16_21
  1207     0124  2926               	goto	u16_20
  1208     0125                     u16_21:
  1209     0125  292A               	goto	i1l64
  1210     0126                     u16_20:
  1211     0126                     i1l773:
  1212                           
  1213                           ;main.c: 90:             PORTC--;
  1214     0126  3001               	movlw	1
  1215     0127  0287               	subwf	7,f	;volatile
  1216     0128                     i1l775:
  1217                           
  1218                           ;main.c: 91:             INTCONbits.RBIF = 0;}
  1219     0128  100B               	bcf	11,0	;volatile
  1220     0129  292A               	goto	i1l67
  1221     012A                     i1l64:
  1222     012A                     i1l67:
  1223     012A  0873               	movf	??_isr+3,w
  1224     012B  008A               	movwf	10
  1225     012C  0E72               	swapf	??_isr+2,w
  1226     012D  0083               	movwf	3
  1227     012E  0EFE               	swapf	btemp,f
  1228     012F  0E7E               	swapf	btemp,w
  1229     0130  0009               	retfie
  1230     0131                     __end_of_isr:
  1231     007E                     btemp	set	126	;btemp
  1232     007E                     wtemp0	set	126
  1233                           
  1234                           	psect	intentry
  1235     0004                     __pintentry:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _isr: [wreg+status,2+status,0]
  1238                           
  1239     0004                     interrupt_function:
  1240     007E                     saved_w	set	btemp
  1241     0004  00FE               	movwf	btemp
  1242     0005  0E03               	swapf	3,w
  1243     0006  00F2               	movwf	??_isr+2
  1244     0007  080A               	movf	10,w
  1245     0008  00F3               	movwf	??_isr+3
  1246     0009  120A  118A  28F6   	ljmp	_isr
  1247                           
  1248                           	psect	idloc
  1249                           
  1250                           ;Config register IDLOC0 @ 0x2000
  1251                           ;	unspecified, using default values
  1252     2000                     	org	8192
  1253     2000  3FFF               	dw	16383
  1254                           
  1255                           ;Config register IDLOC1 @ 0x2001
  1256                           ;	unspecified, using default values
  1257     2001                     	org	8193
  1258     2001  3FFF               	dw	16383
  1259                           
  1260                           ;Config register IDLOC2 @ 0x2002
  1261                           ;	unspecified, using default values
  1262     2002                     	org	8194
  1263     2002  3FFF               	dw	16383
  1264                           
  1265                           ;Config register IDLOC3 @ 0x2003
  1266                           ;	unspecified, using default values
  1267     2003                     	org	8195
  1268     2003  3FFF               	dw	16383
  1269                           
  1270                           	psect	config
  1271                           
  1272                           ;Config register CONFIG1 @ 0x2007
  1273                           ;	Oscillator Selection bits
  1274                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1275                           ;	Watchdog Timer Enable bit
  1276                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1277                           ;	Power-up Timer Enable bit
  1278                           ;	PWRTE = OFF, PWRT disabled
  1279                           ;	RE3/MCLR pin function select bit
  1280                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1281                           ;	Code Protection bit
  1282                           ;	CP = OFF, Program memory code protection is disabled
  1283                           ;	Data Code Protection bit
  1284                           ;	CPD = OFF, Data memory code protection is disabled
  1285                           ;	Brown Out Reset Selection bits
  1286                           ;	BOREN = OFF, BOR disabled
  1287                           ;	Internal External Switchover bit
  1288                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1289                           ;	Fail-Safe Clock Monitor Enabled bit
  1290                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1291                           ;	Low Voltage Programming Enable bit
  1292                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1293                           ;	In-Circuit Debugger Mode bit
  1294                           ;	DEBUG = 0x1, unprogramme  1295     2007                     	org	8199
  1296     2007  20D4               	dw	8404
  1297                           
  1298                           ;Config register CONFIG2 @ 0x2008
  1299                           ;	Brown-out Reset Selection bit
  1300                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1301                           ;	Flash Program Memory Self Write Enable bits
  1302                           ;	WRT = OFF, Write protection off
  1303     2008                     	org	8200
  1304     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     10      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _main->_setup_ADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     625
                                              8 BANK0      2     2      0
                         _Comparador
                            ___awdiv
                              _setup
                          _setup_ADC
                        _setup_portb
 ---------------------------------------------------------------------------------
 (1) _setup_portb                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_ADC                                            1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Comparador                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comparador
   ___awdiv
   _setup
   _setup_ADC
   _setup_portb

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 16 19:54:38 2022

                      pc 0002                       l73 00A4                       l90 014E  
                     l75 00A8                       l84 0181                       l76 00DB  
                     l93 018C                       l95 018D                       l87 0198  
                     u10 018A                       u11 0189             ___awdiv@sign 0035  
                     fsr 0004                      l334 008D                      l701 0191  
                    l711 018A                      l703 0197                      l705 0131  
                    l707 014A                      l709 0182                      l901 0056  
                    l911 0079                      l903 005A                      l905 006B  
                    l913 007F                      l921 008E                      l915 0084  
                    l907 0071                      l691 0179                      l931 00C7  
                    l923 009D                      l917 0089                      l909 0072  
                    l693 017A                      l941 00DF                      l933 00CC  
                    l925 00A1                      l695 017B                      l687 0172  
                    l943 00E5                      l935 00D2                      l927 00A9  
                    l881 002C                      l697 0180                      l689 0175  
                    l945 00E6                      l937 00D8                      l929 00B1  
                    l891 0040                      l883 0031                      l699 018E  
                    l947 00E7                      l939 00D9                      l893 0042  
                    l885 0033                      l877 0025                      l895 0048  
                    l887 0037                      l879 0028                      l897 004B  
                    l889 003C                      l899 0052                      u410 007F  
                    u330 002C                      u411 007E                      u331 002B  
                    u420 0084                      u340 0037                      u421 0083  
                    u405 0073                      u341 0036                      u350 0048  
                    u430 00A8                      u351 0047                      u431 00A7  
                    u440 00D2                      u441 00D1                      u370 005A  
                    u450 00DF                      u371 0059                      u451 00DE  
                    u365 004C                      u390 006B                      u391 006A  
                    u385 005B                      u395 0067                      u467 00ED  
                    u477 014C                      _isr 00F6                      fsr0 0004  
                    indf 0000                     _ADIF 0066                     ?_isr 0070  
                   _IOCB 0096                     _RBIF 0058                     i1l62 0114  
                   i1l64 012A                     i1l67 012A                     _WPUB 0095  
                   _main 008E                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 008E  
                  _DISP1 0077                    _DISP2 0075          ___awdiv@divisor 0030  
                  i1l761 0100                    i1l771 0120                    i1l763 0108  
                  i1l773 0126                    i1l765 010E                    i1l757 00F6  
                  i1l775 0128                    i1l767 0112                    i1l759 00FA  
                  i1l769 0118          ___awdiv@counter 0034                    u12_20 00FA  
                  u12_21 00F9                    u13_20 0100                    u13_21 00FF  
                  u14_20 010E                    u14_21 010D                    u15_20 0118  
                  u15_21 0117                    u16_20 0126                    u16_21 0125  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u48_27 0104                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    u49_27 011C               _Comparador 0182  
                  _setup 0172                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00F6  
                 ??_main 0038                   _ADRESH 001E         ___awdiv@dividend 0032  
                 ?_setup 0070                   _ANSELH 0189                ??___awdiv 0074  
       ___awdiv@quotient 0036                   saved_w 007E              ?_Comparador 0070  
           ?_setup_portb 0070  __end_of__initialization 0021           __pcstackCOMMON 0070  
           __pidataBANK0 0162            __end_of_setup 0182           _OPTION_REGbits 0081  
                ??_setup 0074               __pmaintext 008E               __pintentry 0004  
                ___awdiv 0025                _ANSELbits 0188                  __ptext1 018E  
                __ptext2 0131                  __ptext3 0172                  __ptext4 0025  
                __ptext5 0182                  __ptext6 00F6                  _display 0020  
   end_of_initialization 0021        __end_of_setup_ADC 014F                _PORTAbits 0005  
              _PORTBbits 0006                _TRISAbits 0085             ??_Comparador 0074  
     __end_of_Comparador 018E      start_initialization 000F              __end_of_isr 0131  
             init_fetch0 014F              __pdataBANK0 0020              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0030                 ?___awdiv 0030  
      interrupt_function 0004                _setup_ADC 0131               _ADCON0bits 001F  
             _ADCON1bits 009F            ??_setup_portb 0074               ?_setup_ADC 0070  
    __end_of_setup_portb 0199               _INTCONbits 000B                 init_ram0 0153  
               intlevel1 0000              ??_setup_ADC 0074              _setup_portb 018E  
